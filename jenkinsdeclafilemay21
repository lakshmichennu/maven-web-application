  pipeline{

     agent any

      tools{ 
      maven "maven 3.8.5"
      }
      triggers {
         pollSCM ('* * * * *')
         //cron ('* * * * *')
        }
       options {
          timestamps()
          buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
       } 
      stages{

       //get the code from Github
     stage('CheckoutCode'){
     steps{
         slacknotifications('STARTED')
      git branch: 'development', credentialsId:  '780b15b1-70cc-4f21-bb0b-3f61db7d6352', url: 'https://github.com/lakshmichennu/maven-web-application.git'
     }
     }
    
     //do the build
     stage('Build'){
     steps{
     sh "mvn clean package"
     }
     }

           //execute sonarqube report
     stage('executesonarqubereport'){
     steps{
      sh "mvn sonar:sonar"
      }
      }
      
       //upload Artifacts into Nexus repo
      stage('uploadArtifactsintoNexus'){
      steps{
      sh "mvn deploy"
      }
      }
      
       //deploy application into tomcat server
     stage('deployappintotimcatserver'){
     steps{
     sshagent(['73fe0b59-ad37-4a6d-8ee9-155ba8cbfb21']) {
     sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@35.154.185.252:/opt/apache-tomcat-9.0.64/webapps/"
     }      
     }
     }
  
     } //stages closing
     post {
     success {
     slacknotifications(currentBuild.result)
    
     }
     failure {
     slacknotifications(currentBuild.result)
     }
     }
     
     
     } //pipeline closing
     
     def slacknotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME}        [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

